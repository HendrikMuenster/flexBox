From 029352008a0a808c857d8ea032003aabe8f456d7 Mon Sep 17 00:00:00 2001
From: Lars Haalck <lars.haalck@arcor.de>
Date: Mon, 27 Mar 2017 13:35:35 +0200
Subject: [PATCH] convert matlab to octave

---
 operators/basicOperator.m | 31 +++++++++++++++++++++----------
 prox/basicProx.m          |  6 ++++--
 2 files changed, 25 insertions(+), 12 deletions(-)

diff --git a/operators/basicOperator.m b/operators/basicOperator.m
index 4594f24..be538c9 100644
--- a/operators/basicOperator.m
+++ b/operators/basicOperator.m
@@ -8,28 +8,39 @@ classdef basicOperator
     properties
         isMinus
     end
-    
-    methods (Abstract)
-        mtimes(obj,vector)
-        returnMatrix(obj)
-        size(obj,dim)
-        getMaxRowSumAbs(obj)
+
+    methods %(Abstract) mimic abstract behaviour by throwing runtime errors if methods are not defined
+        function mtimes(obj,vector)
+            error('used operator did not define mtimes()');
+        end
+
+        function returnMatrix(obj)
+            error('used operator did not define returnMatrix()');
+        end
+
+        function size(obj,dim)
+            error('used operator did not define size()');
+        end
+
+        function getMaxRowSumAbs(obj)
+            error('used operator did not define getMaxRowSumAbs()');
+        end
     end
-    
+
     methods
         function result = uminus(obj)
             result = obj;
             result.isMinus = ~result.isMinus;
         end
-        
+
         function uplus(obj)
             error('You cannot use plus with operator classes. Please use concatOperator instead!')
         end
-        
+
         function plus(obj,B)
             error('You cannot use plus with operator classes. Please use concatOperator instead!')
         end
-        
+
         function minus(obj,B)
             error('You cannot use minus with operator classes. Please use concatOperator instead!')
         end
diff --git a/prox/basicProx.m b/prox/basicProx.m
index 382e7bf..7614b85 100644
--- a/prox/basicProx.m
+++ b/prox/basicProx.m
@@ -2,7 +2,9 @@ classdef basicProx < handle
 	properties
 	end
 
-	methods (Abstract)
-		applyProx(obj)
+	methods %(Abstract) %mimic abstract behaviour by throwing errors if methods are not defined
+		function applyProx(obj)
+			error('used prox did not define applyProx()');
+		end
 	end
 end
-- 
2.12.1

